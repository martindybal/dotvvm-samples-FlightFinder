@import "mixins";

// IMPORTANT: Never include this file in other *.scss files

html {
    font-size: 62.5%;
}

.element-to-middle {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

.text-strong {
    font-weight: bold;
}

.text-to-center {
    text-align: center;
}

.text-to-left {
    text-align: left;
}

.text-to-right {
    text-align: right;
}

.text-justify {
    text-align: justify;
}

.nav-item-center {
    white-space: nowrap;

    @include res-min-tablet {
        display: inline-block;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
    }
}

.nav-item-right {
    display: inline-block;
    position: absolute;
    top: 50%;
    right: 2rem;
    transform: translate(0, -50%);

    @include res-max-tablet {
        position: relative;
        top: unset;
        right: unset;
        transform: translate(0, 0);
        margin-bottom: 2rem;
    }
}

.nav-item-left {
    display: inline-block;
    position: absolute;
    top: 50%;
    left: 2rem;
    transform: translate(0, -50%);

    @include res-max-tablet {
        position: relative;
        top: unset;
        right: unset;
        transform: translate(0, 0);
        margin-bottom: 2rem;
    }
}

.clean-button {
    padding: 0;
    margin: 0;
    height: auto;
    display: inline-block !important;
    float: none !important;
}

.color-red {
    color: $color-required;
    border-color: $color-required;
}

.color-success {
    color: $color-success;
}

.text-margin-bottom {
    margin-bottom: 1.6rem;

    @include res-max-mobile {
        margin-bottom: 1.2rem;
    }
}

.flex-row {
    display: flex;
    flex-direction: row;

    &_50 {
        flex: 0 0 50%;
    }
}

.flex-column {
    display: flex;
    flex-direction: column;
}

$gap-positions: "top", "right", "bottom", "left";
$gap-sizes: (
    "small": $gap-small, 
    "medium": $gap-medium, 
    "big": $gap-big
);

@each $pos in $gap-positions {

    @each $size in $gap-sizes {
        $val: nth($size, 1);
        $key: nth($size, 2);
        
        .gap-#{$pos}-#{$val} {
            margin-#{$pos}: $key;
        }
    }
}

.gap-top-bottom-big {
    margin: $gap-big 0;
}

.gap-top-bottom-medium {
    margin: $gap-medium 0;
}

.gap-top-bottom-small {
    margin: $gap-small 0;
}